type CurrentWeather {
  is_day: Int
  temperature: Float
  time: DateTime
  weathercode: Int
  winddirection: Int
  windspeed: Float
}
type Daily {
  temperature_2m_max: [Float]
  time: [Date]
  weathercode: [Int]
}
type DailyUnits {
  temperature_2m_max: String
  time: String
  weathercode: String
}
type Hourly {
  apparent_temperature: [Float]
  dewpoint_2m: [Float]
  precipitation_probability: [Int]
  relativehumidity_2m: [Int]
  temperature_2m: [Float]
  time: [DateTime]
  uv_index: [Float]
  uv_index_clear_sky: [Float]
}
type HourlyUnits {
  apparent_temperature: String
  dewpoint_2m: String
  precipitation_probability: String
  relativehumidity_2m: String
  temperature_2m: String
  time: String
  uv_index: String
  uv_index_clear_sky: String
}
type Root {
  current_weather: CurrentWeather
  daily: Daily
  daily_units: DailyUnits
  elevation: Int
  generationtime_ms: Float
  hourly: Hourly
  hourly_units: HourlyUnits
  latitude: Float
  longitude: Float
  timezone: String
  timezone_abbreviation: String
  utc_offset_seconds: Int
}

type Query {
  myQuery(
    current_weather: String
    daily: String
    hourly: String
    latitude: String
    longitude: String
    timezone: String
  ): Root @rest(endpoint: "https://api.open-meteo.com/v1/forecast")
}
